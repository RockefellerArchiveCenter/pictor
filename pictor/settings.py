"""
Django settings for pictor project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from pathlib import Path

import pictor as config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG')

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS').split()


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'create_derivatives',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pictor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pictor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.getenv('SQL_ENGINE'),
        "NAME": os.getenv('SQL_DATABASE'),
        "USER": os.getenv('SQL_USER'),
        "PASSWORD": os.getenv('SQL_PASSWORD'),
        "HOST": os.getenv('SQL_HOST'),
        "PORT": os.getenv('SQL_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'create_derivatives.User'

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = str(Path(BASE_DIR, 'static'))

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django Rest Framework settings

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100
}

SRC_DIR = os.getenv('SRC_DIR')
TMP_DIR = os.getenv('STORAGE_TMP_DIR')
DEST_DIR = os.getenv('DEST_DIR')

# baseurl, username, password, repo_id
ARCHIVESSPACE = (os.getenv('ARCHIVESSPACE_URL'), os.getenv('ARCHIVESSPACE_USER'), os.getenv('ARCHIVESSPACE_PW'), os.getenv('ARCHIVESSPACE_REPOSITORY'))

# region_name, access_key, secret_key, bucket
AWS = (os.getenv('AWS_IIIF_REGION_NAME'), os.getenv('AWS_IIIF_ACCESS_KEY'), os.getenv('AWS_IIIF_SECRET_KEY'), os.getenv('AWS_IIIF_BUCKET'))

IMAGESERVER_URL = os.getenv('IMAGESERVER_URL')
IIIF_URL = os.getenv('IIIF_URL')
PREZI_DEBUG = os.getenv('PREZI_DEBUG_LEVEL')
IIIF_API = {'image_api': os.getenv('IIIF_IMAGE_API'), 'presentation_api': os.getenv('IIIF_PRESENTATION_API')}

OPJ_COMPRESS = os.getenv('OPJ_COMPRESS')
IMG2PDF = os.getenv('IMG2PDF')
OCRMYPDF = os.getenv('OCRMYPDF')
